 // path module
const path = require("path");
const util = require("./lib/util");

// root path
const rootPath = path.join(__dirname, '../../../');

const srcPath = path.join(rootPath, 'src');
const nodeModulesPath = path.join(rootPath, 'node_modules');

const appPath = path.join(srcPath, 'app');
const assetsPath = path.join(srcPath, 'assets');

const buildPath = path.join(rootPath, 'build');
const tmpBuildPath = path.join(rootPath, '_build');

const distPath = path.join(rootPath, 'dist');

const config = {

    path: {
        root: rootPath,
        src: srcPath,
        app: appPath,
        assets: assetsPath,
        build: buildPath,
        tmpBuild: tmpBuildPath,
        dist: distPath,
        nodeModules: nodeModulesPath
    },
    relativePath: {}
};

_initPaths();
_initRelativePaths();

function _initPaths(){

    if (!config.path) return;

    for (var k in config.path){

        var absolutePath = config.path[k];

        config.path[k] = path.join(absolutePath);
    }
}


// 기존 path 들의, 상대 path 를 추가 시킨다.
function _initRelativePaths(){

    if (!config.path) return;

    config.relativePath = {};

    for (var k in config.path){

        var absolutePath = config.path[k];
        var relativePathIndex = absolutePath.lastIndexOf('/') & absolutePath.lastIndexOf('\\');
        var relativePath = absolutePath.substr(relativePathIndex + 1);

        config.relativePath[k] = relativePath;
    }
}

module.exports = config;