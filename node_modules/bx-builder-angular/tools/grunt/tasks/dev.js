/**
 * Created by sgjeon on 16. 4. 8..
 */

const _ = require('lodash');

module.exports = function(grunt, options) {

    const gruntConfig = grunt.config;

    const config = grunt.config.get('config');

    const restore = config.build.restore;
    const linters = config.build.linters;

    const enabledBackMode = _.isPlainObject(restore) && _.isBoolean(restore.backup) && restore.backup;
    const enabledESLint = _.isPlainObject(linters) && _.isPlainObject(linters.js) && linters.js.rules;
    const taskName = 'dev';

    // 환경별 설정을 merge 한다.
    gruntConfig.merge({
        config: {
            'env': taskName
        }
    });

	const fullTasks = [
	    // restore 를 위한, 백업을 진행할 경우
	    'copy:tmpBuild',
        // 사용자가 지정한 파일을 사전 실행 한다.
        'shell:userTaskPreDev',
        // html hinting 을 진행한다.
        'htmlhintplus',
        // css linting 을 진행한다.
        'csslint_plus',
        // js liniting 을 진행한다.
        'eslint',
        // 빌드 폴더를 삭제한다.
        '_clean:main',
        // webpack 빌드
        'shell:webpack',
        // external 파일 생성
        'concat:dev',
        // sass 빌드
        'sass:dev',
        // tpl 파일 복사
        'copy:tplHtml',
        // 정적 리소스 복사
        'copy:main',
        // 최종 task 진행
        '_done:dev'
    ];
    
    const tasks = [];

    _.forEach(fullTasks, v => {

        if (v === 'copy:tmpBuild'){
            enabledBackMode && tasks.push(v);
        }
        else if (v === 'eslint'){
            enabledESLint && tasks.push(v);
        }
        else{
            tasks.push(v);
        }
    });

    grunt.registerTask(taskName, tasks);
};