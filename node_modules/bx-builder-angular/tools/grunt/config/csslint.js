
/**
 * Created by sgjeon on 16. 4. 8..
 */

const _ = require('lodash');
const path = require('path');

const cssLintPluginBxuip = require('csslint-plugin-bxuip');

const csslintrc = cssLintPluginBxuip.csslintrc;

module.exports = function(grunt, options){

    const config = grunt.config.get('config');


    // https://github.com/gruntjs/grunt-contrib-csslint
    var cssLint = {
        strict: {
            options: {
                csslintrc: csslintrc
            },
            src: []
        }
    };

    (function initCssLintPlus(){

        var buildObject = config.build;

        if (
        !buildObject.linters ||
        !buildObject.linters.css ||
        !buildObject.linters.css.rules ||
        !_.size(buildObject.linters.css.rules)) return;

        const ext = '.css';
        const defaultSrc = `**/*.${ext}`;
        const src = _.isArray(buildObject.linters.css.src) ? buildObject.linters.css.src : [defaultSrc];

        const _src = [];

        const replacePtn = /\..+$/gi;

        _.forEach(src, v => {

            v = v.replace(replacePtn, '');

            _src.push(path.join(config.tools.path.src, (v + ext)));

        });

        cssLint.strict.src = _src;

    })();

    return cssLint;
};