/**
 * Created by sgjeon on 16. 4. 8..
 */

module.exports = function(grunt, options){

    const config = grunt.config.get('config');

    const proxy = require('http-proxy-middleware');

    // 기본적인 proxy 옵션
    // https://github.com/chimurai/http-proxy-middleware#install
    const defaultProxyOptions = {
        changeOrigin: true,
        ws: true,
        secure: false
    };

 	const apiPatterns = [];

 	// middleware 모듈을 통해, browserSync 에 proxy 기능을 추가한다.

 	// config.build.devServer.proxyPatterns 프로퍼티에 값이 존재하거나, Array 타입인 경우
 	if (config.build.devServer.proxyPatterns && config.build.devServer.proxyPatterns.constructor === Array){

 		var length = config.build.devServer.proxyPatterns.length;

 		for (var i = 0; i < length; i++){

 			var pattern = config.build.devServer.proxyPatterns[i];

 			if (!pattern || pattern.constructor !== Object) continue;

 			apiPatterns.push(proxy(pattern.path, Object.assign(defaultProxyOptions, pattern.options)));
 		}

 	}

    // https://www.browsersync.io/docs/grunt/
    return {

        // 빌드된 리소스들을 watch 한다.
        bsFiles: {
            src: [
                '<%=config.tools.path.build%>/index.html'
            ]
        },
        options: {
            watchTask: true,
            debugInfo: true,
            logConnections: false,
            notify: true,
            server: {
                baseDir: '<%=config.tools.path.build%>'
                // sync page 에 해당 디렉토리 목록을 보여준다.
                //directory: true
            },
            ghostMode: false,
            // external ip 를 수정한다.
            host: '<%=config.build.devServer.host%>',
            // sync page port 를 설정한다.
            port: '<%=config.build.devServer.port%>',
            middleware: apiPatterns
        }
    };
};