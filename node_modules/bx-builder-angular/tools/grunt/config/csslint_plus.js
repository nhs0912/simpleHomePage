
/**
 * Created by sgjeon on 16. 4. 8..
 */

const _ = require('lodash');

const cssLintPluginBxuip = require('csslint-plugin-bxuip');

const csslintrc = cssLintPluginBxuip.csslintrc;
const bxuipRules = cssLintPluginBxuip.rules;

const taskName = 'csslint_plus';

module.exports = function(grunt, options){

    const config = grunt.config.get('config');

    // https://github.com/domtronn/grunt-csslint-plus
    var cssLintPlus = {
        rules: []
    };

    (function initCssLintPlus(){

        var ret = [];
        var buildObject = config.build;

        if (
        !buildObject.linters ||
        !buildObject.linters.css ||
        !buildObject.linters.css.rules ||
        !_.size(buildObject.linters.css.rules)) return;

        var configRules = buildObject.linters.css.rules;

        if (!_.isString(configRules) && !_.isPlainObject(configRules)) return;

        if (_.isString(configRules)){

            if (configRules !== '*'){
                grunt.fail.fatal('[' + taskName + '] Please defined the wildCard character.');
            }

            _.map(bxuipRules, function(v, k){
                ret.push(v.rulePath);
            });
        }
        else if (_.isPlainObject(configRules)){

            _.map(bxuipRules, function(v, k){

                if (configRules[k] === 'error'){
                    ret.push(v.rulePath);
                }
            });
        }

        cssLintPlus.rules = ret;

    })();


    return cssLintPlus;
};

