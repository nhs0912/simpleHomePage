/**
 * Created by sgjeon on 16. 4. 5..
 */

const webpack = require('webpack');

// lodash
const _ = require('lodash');

const webpackConfig = require('webpack-config');
const envConfig = webpackConfig.environment.get('config');

const js = envConfig.build.js;

const enabledSourceMapMode = _.isPlainObject(js) && _.isBoolean(js.sourceMap) && js.sourceMap;

const config = {

    output: {
        filename: '[name].js',
        /*
        빌드된 파일의 모듈 정보를 comment 를 통해, 아래와 같이 표시해준다.
        __webpack_require__(\/*! ../dispatchers/app *\/ 2);

        즉 추가된 문자열로 인한 오버 헤드가 발생하므로, prod 빌드에서는 false 를 할당한다.
        */
        pathinfo: true
    },
    debug: true

};
// angular 의 경우, sourceMap 적용시 line 수가 다르게 나오는 문제가 있어 eval 로 처리한다.
// dev 에 작성한 이유는 base 쪽에서 처리할 경우, prod 환경에도 영향을 주기 떄문에 이와 같이 설정함.
config.devtool = enabledSourceMapMode ? 'eval' : '';

module.exports = new webpackConfig().extend('./webpack.base.config.js').merge(config);