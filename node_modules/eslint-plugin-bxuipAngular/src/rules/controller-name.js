
const utils = require('../lib/utils');
const msg = require('../lib/msg.json');

module.exports = {
    meta: {
        id: 'bxuipAngular/controller-name',
        schema: [
            {
                type: 'string'
            }
        ]
    },
    create: function(context) {

        var ruleMsg = msg['ko'][this.meta.id]['default'];

        return {

            CallExpression: function(node) {

                var prefix = context.options[0] || '/^[a-z][a-zA-Z0-9]*Controller$/';

                var convertedPrefix = utils.convertPrefixToRegex(prefix);

                if (!utils.isStringRegexp(prefix)) return;

                var callee = node.callee;

                if (callee.type === 'MemberExpression' && callee.property.name === 'controller') {

                     // controller 메서드에 정의된 아규먼트가 2개 보다 작을 경우
                     // 예: md.controller('viewsLoginController', __controller);
                    if (node.arguments.length < 2) return;

                    var name = node.arguments[0].value;

                    if (name && !convertedPrefix.test(name)) {

                        context.report(node, ruleMsg, {
                            controller: name,
                            prefix: prefix.toString()
                        });
                    }
                }
            }
        };
    }
};
