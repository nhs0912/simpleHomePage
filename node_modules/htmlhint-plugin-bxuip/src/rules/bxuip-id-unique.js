
const _ = require('lodash');
const util = require('../lib/util.js');
const msg = require('../lib/msg.json');

module.exports = {
    id: 'bxuip-id-unique',
    description: '',
    init: function(parser, reporter){

        const self = this;

        const ruleMsg = msg['ko'][self.id]['default'];

        const msgObject = {};
        const ids = {};

        parser.addListener('tagstart', (event) => {

            const tagName = event.tagName.toLowerCase();
            const attrs = event.attrs;
            const col = event.col + event.tagName.length + 1;
            const line = event.line;
            const raw = event.raw;

            _.map(attrs, (v, k) => {

                const attrName = v.name.toLowerCase();
                const value = _.trim(v.value);

                if (attrName === 'id'){

                    if (value){

                        ids[value] = !ids[value] ? 1 : ++ids[value];

                        if (ids[value] > 1){

                            msgObject.ruleId = self.id;
                            msgObject.ruleMsg = ruleMsg;
                            msgObject.line = line;
                            msgObject.raw = raw;

                            reporter.error(util.getMessage(msgObject), event.line, col, self);
                        }
                    }
                }
            });
        });
    }
};