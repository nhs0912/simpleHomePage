const _ = require('lodash');
const util = require('../lib/util.js');
const msg = require('../lib/msg.json');

module.exports = {

	//rule information
	id: 'bxuip-allow-named-id',
	name: 'bxuip-allow-named-id',
	desc: '',
	url: '',
	browsers: 'All',

	//initialization
    init: function(parser, reporter) {

        var self = this;

        var ruleMsg = msg['ko'][self.id]['default'];
        var msgObject = {};

        parser.addListener("startrule", function(event) {

            var selectors = event.selectors;

            _.map(selectors, function(selector){

                var line = selector.line;
                var text = selector.text;

                _.map(selector.parts, function(part){

                    if (part.type === parser.SELECTOR_PART_TYPE) {

                        _.map(part.modifiers, function(modifier){

                            if (modifier.type === "id") {

                                var id = modifier.text.replace('#', '');

                                if (
                                id !== 'wrap' &&
                                id !== 'header' &&
                                id !== 'container' &&
                                id !== 'footer'){

                                    msgObject.ruleId = self.id;
                                    msgObject.ruleMsg = ruleMsg;
                                    msgObject.line = line;
                                    msgObject.raw = id;

                                    reporter.error(util.getMessage(msgObject), selector.line, selector.col, self);
                                }
                            }
                        });
                    }
                });
            });

        });
    }
};